@model FasTagApi.Models.Billing

@{
    ViewBag.Title = "Create Billing";
}

<style>
    body {
        background-color: cornsilk;
    }

    h5 {
        font-family: 'Arial', sans-serif;
        font-size: 1.5rem;
        text-shadow: 2px 2px 4px #888888;
        text-align: center;
    }

    .title-span {
        background-color: mediumvioletred;
        color: white;
        padding: 1px;
        border-radius: 10px;
    }

    .custom-editor {
        width: 30%;
    }

    .fw-bold {
        font-weight: bold;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid mt-4 fw-bold text-center">
        <h5><span class="title-span">Paid Bills Entry Form</span></h5>

        <div class="form-group mt-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BillNo, "Bill Number", htmlAttributes: new { @class = "col-md-1 fw-bold" })
                @Html.EditorFor(model => model.BillNo, new { htmlAttributes = new { @class = "", required = "required" } })
                @Html.ValidationMessageFor(model => model.BillNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BillDate, "Bill Date", htmlAttributes: new { @class = "control-label col-md-1 fw-bold" })
                @Html.EditorFor(model => model.BillDate, new { htmlAttributes = new { @class = "", required = "required" } })
                @Html.ValidationMessageFor(model => model.BillDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "", required = "required" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.DeptCode, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.DeptCode, new { htmlAttributes = new { @class = "", id = "DeptCode", required = "required" } })
                @Html.ValidationMessageFor(model => model.DeptCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "", id = "Department", required = "required" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.PartyCode, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.PartyCode, new { htmlAttributes = new { @class = "", id = "PartyCode", required = "required" } })
                @Html.ValidationMessageFor(model => model.PartyCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.PartyName, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.PartyName, new { htmlAttributes = new { @class = "", id = "PartyName", required = "required" } })
                @Html.ValidationMessageFor(model => model.PartyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Mode, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.DropDownListFor(model => model.Mode, new List<SelectListItem>
                {
                    new SelectListItem { Value = "RTGS", Text = "RTGS" },
                    new SelectListItem { Value = "ONLINE", Text = "ONLINE" }
                }, htmlAttributes: new { @class = "", id = "Mode", style = "width:180px" })
                @Html.ValidationMessageFor(model => model.Mode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.RefNo, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "", required = "required" } })
                @Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.DateOfPayment, "DOP", htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.DateOfPayment, new { htmlAttributes = new { @class = "", required = "required" } })
                @*@Html.ValidationMessageFor(model => model.DateOfPayment, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ViewStatus, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.ViewStatus, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.ViewStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <button type="submit" class="btn btn-sm btn-info">Create</button>
                @Html.ActionLink("Back to Home", "Index")
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("ImportFromExcel", "Billing", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container  text-white " style="background-color:indigo; background-size: cover; background-position: center; background-repeat: no-repeat;  height: 40px; width: 560px ">
        <div class="row ">
            <div class="col-md-12">
                <label for="excelFile" class="text-white fw-bold">Upload Excel File</label>
                <input type="file" name="excelFile" id="excelFile" class="fw-bold" />
                <input type="submit" value="Import" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function() {
        $('#DeptCode').on('change', function() {
            var deptCode = $(this).val();
            if (deptCode) {
                $.ajax({
                    url: '@Url.Action("GetDepartmentByCode")', // Adjust this URL according to your controller/action
                    type: 'GET',
                    data: { deptCode: deptCode },
                    success: function(data) {
                        $('#Department').val(data.Department);
                    }
                });
            } else {
                $('#Department').val('');
            }
        });

        $('#PartyCode').on('change', function() {
            var partyCode = $(this).val();
            if (partyCode) {
                $.ajax({
                    url: '@Url.Action("GetPartyByCode")', // Adjust this URL according to your controller/action
                    type: 'GET',
                    data: { partyCode: partyCode },
                    success: function(data) {
                        $('#PartyName').val(data.PartyName);
                    }
                });
            } else {
                $('#PartyName').val('');
            }
        });
        $('#BillDate').datepicker({
            dateFormat: 'yy-mm-dd' // Adjust date format as needed
        });
        $('#DateOfPayment').datepicker({
            dateFormat: 'yy-mm-dd' // Adjust date format as needed
        });
    });
</script>