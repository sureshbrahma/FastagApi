@model IEnumerable<FasTagApi.Models.VehicleRequest>

@{
    ViewBag.Title = "FasTag Recharge Request";
}

<style>
    /* Existing styles */
    body {
        background-color: cornsilk;
        font-size: 0.9rem; /* Reduce font size for the entire page */
    }

    .table {
        margin-top: 20px;
        background-color: #ffffff;
        font-size: 0.9rem; /* Reduce font size for table content */
        table-layout: auto; /* Allow columns to adjust width based on content */
    }

    .thead-dark th {
        background-color: #343a40;
        color: white;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: lavenderblush;
    }

    .btn-warning {
        margin-right: 5px;
        color: white;
    }

    .btn-danger {
        margin-right: 5px;
        color: white;
    }

    h2 {
        font-family: 'Arial', sans-serif;
        font-size: 1.5rem;
        text-shadow: 2px 2px 4px #888888;
        text-align: center;
    }

    .title-span {
        background-color: darkblue;
        color: white;
        padding: 2px;
        border-radius: 10px;
    }

    .container-fluid {
        padding: 20px;
        margin-left: 0;
        margin-right: 0;
    }

    .btn-danger {
        background-color: #dc3545;
    }

    .btn-warning {
        background-color: #ffc107;
    }

    .table-bordered {
        border: 1px solid #dee2e6;
    }

        .table-bordered thead th,
        .table-bordered tbody td {
            border: 1px solid #dee2e6;
        }

        .table-bordered thead th {
            background-color: #17a2b8;
            color: #fff;
        }

        .table-bordered tbody td {
            color: #212529;
        }

        .table-bordered tbody tr:hover {
            background-color: lightskyblue;
        }

    .text-info {
        color: #17a2b8;
    }

    .fw-bold {
        font-weight: bold;
    }

    .hide-column {
        display: none;
    }

    #searchInput {
        margin-top: 10px;
        margin-bottom: 20px;
        padding: 10px;
        font-size: 1rem;
        width: 100%;
        height: 35px;
        box-sizing: border-box;
        border: 1px solid #17a2b8;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
        margin-left: 800px;
    }

        #searchInput:focus {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            outline: none;
        }

    /* Custom styles for Status column */
    .status-column {
        white-space: nowrap; /* Ensure the column width adjusts to the content */
    }
</style>

<script>
    // Function to refresh the page every 60 seconds (60000 milliseconds)
    setInterval(function () {
        location.reload();
    }, 60000); // 60000 milliseconds = 60 seconds

    function searchTable() {
        // Declare variables
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toLowerCase();
        table = document.querySelector(".table");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 1; i < tr.length; i++) {
            tr[i].style.display = "none";
            td = tr[i].getElementsByTagName("td");
            for (j = 0; j < td.length; j++) {
                if (td[j]) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toLowerCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                        break;
                    }
                }
            }
        }
    }
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        // Attach click event handler to the Expire Status button
        $("#expireStatusButton").on("click", function() {
            // Send an AJAX request to the server
            $.ajax({
                url: '@Url.Action("UpdateExpireStatus", "Home")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({}),
                success: function(data) {
                    if (data.success) {
                        // Reload the page or update the table

                        location.reload();
                        alert('Successfully Changed Expiration of Status')
                    } else {
                        alert('Error: ' + data.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        });
    });
</script>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<body>
    <div class="container-fluid mt-4">
        <h2><span class="title-span">Fastag Recharge Requisition Details</span></h2>
        @Html.ActionLink("Mobile Number Change Request", "IndexMobile", "", new { @class = "btn btn-info btn-sm" })
        <button id="expireStatusButton" class="btn btn-danger btn-sm">Set Status to Expire</button>
        <!-- Search Box -->
        <input type="text" id="searchInput" onkeyup="searchTable()" placeholder="Search for records..">
        <!-- Expire Status Button -->

        <form id="deleteForm">
            <table class="table table-striped table-bordered">
                <thead class="text-bg-info">
                    <tr>
                        <th>Edit</th>
                        <th class="hide-column">@Html.DisplayNameFor(model => model.Sno)</th>
                        <th>@Html.DisplayNameFor(model => model.InstitutionName)</th>
                        <th>@Html.DisplayNameFor(model => model.DepartmentName)</th>
                        <th>@Html.DisplayNameFor(model => model.UserName)</th>
                        <th>WMN</th>
                        <th>@Html.DisplayNameFor(model => model.VehicleFullNumber)</th>
                        <th>@Html.DisplayNameFor(model => model.VehicleType)</th>
                        <th>TFT</th>
                        <th>DIP</th>
                        <th>@Html.DisplayNameFor(model => model.RechargeAmount)</th>
                        <th>@Html.DisplayNameFor(model => model.DateOfRequest)</th>
                        <th>ReferenceNumber</th>
                        <th class="status-column">@Html.DisplayNameFor(model => model.Status)</th>
                        <th>@Html.DisplayNameFor(model => model.Expiration)</th>
                        <th>@Html.DisplayNameFor(model => model.FastagAccount)</th>
                        <th>@Html.DisplayNameFor(model => model.Remarks)</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody class="fw-bold text-info">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Sno }, new { @class = "btn btn-primary btn-sm" })
                            </td>
                            <td class="hide-column">@Html.DisplayFor(modelItem => item.Sno)</td>
                            <td>@Html.DisplayFor(modelItem => item.InstitutionName)</td>
                            <td>@Html.DisplayFor(modelItem => item.DepartmentName)</td>
                            <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                            <td>@Html.DisplayFor(modelItem => item.WhatsappMobileNumber)</td>
                            <td>@Html.DisplayFor(modelItem => item.VehicleFullNumber)</td>
                            <td>@Html.DisplayFor(modelItem => item.VehicleType)</td>
                            <td class="status-column">@Html.DisplayFor(modelItem => item.TravellingFromTO)</td>
                            <td>@Html.DisplayFor(modelItem => item.DepartmentInChargePermission)</td>
                            <td>@Html.DisplayFor(modelItem => item.RechargeAmount)</td>
                            <td>@String.Format("{0:dd-MM-yyyy}", item.DateOfRequest)</td>
                            <td class="status-column">@Html.DisplayFor(modelItem => item.ReferenceNo)</td>
                            <td class="status-column">@Html.DisplayFor(modelItem => item.Status)</td>
                            <td>@Html.DisplayFor(modelItem => item.Expiration)</td>
                            <td>@Html.DisplayFor(modelItem => item.FastagAccount)</td>
                            <td>@Html.DisplayFor(modelItem => item.Remarks)</td>
                            <td>
                                @Html.ActionLink("Delete", "Delete", new { id = item.Sno }, new { @class = "btn btn-danger btn-sm" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    </div>
</body>